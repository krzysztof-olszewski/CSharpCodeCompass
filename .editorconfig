root = true

# C# files
[*.cs]

# Indentation and spacing
indent_size = 4  # Sets the number of spaces used for each indentation level.
indent_style = space  # Uses spaces for indentation instead of tabs.
tab_width = 4  # Specifies the width of a tab character.

# New line preferences
end_of_line = crlf  # Sets the line endings to CRLF (Carriage Return + Line Feed).
insert_final_newline = false  # Do not insert a newline at the end of the file.

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false  # Do not separate using directives into groups.
dotnet_sort_system_directives_first = true  # Place 'System' using directives first.
file_header_template = unset  # No specific file header template.

# this. and Me. preferences
dotnet_style_qualification_for_event = false  # Do not enforce 'this.' or 'Me.' for events.
dotnet_style_qualification_for_field = false  # Do not enforce 'this.' or 'Me.' for fields.
dotnet_style_qualification_for_method = false  # Do not enforce 'this.' or 'Me.' for methods.
dotnet_style_qualification_for_property = false  # Do not enforce 'this.' or 'Me.' for properties.

# Language keywords vs BCL types preferences

# Prefer language keywords (e.g., int) over BCL types (e.g., Int32) for locals, parameters, and members.
dotnet_style_predefined_type_for_locals_parameters_members = true
# Prefer language keywords (e.g., int) over BCL types (e.g., Int32) for member access.
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences

# Always use parentheses for arithmetic binary operators for clarity.
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
# Always use parentheses for other binary operators for clarity.
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
# Never use parentheses for other operators if unnecessary.
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
# Always use parentheses for relational binary operators for clarity.
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members # Require accessibility modifiers for non-interface members.


# Field preferences
dotnet_style_readonly_field = true # Prefer readonly fields over mutable ones.

# Expression-level preferences

# Prefer null-coalescing operator (??) over conditional expression for null check and assignment.
dotnet_style_coalesce_expression = true
# Prefer collection initializer syntax (e.g., new List<int> { 1, 2, 3 }) over explicit constructor syntax.
dotnet_style_collection_initializer = true  
# Require explicit tuple element names when deconstructing tuples or assigning to tuple variables.
dotnet_style_explicit_tuple_names = true
# Require that the namespace declaration matches the folder structure.
dotnet_style_namespace_match_folder = true
# Prefer null propagation (?. and ?[]) over null checks.
dotnet_style_null_propagation = true
# Prefer object initializer syntax (e.g., new MyClass { Prop1 = value1, Prop2 = value2 }) over explicit constructor syntax.
dotnet_style_object_initializer = true
# Prefer operators to be placed at the beginning of lines when wrapping expressions.
dotnet_style_operator_placement_when_wrapping = beginning_of_line  
# Prefer auto-implemented properties (e.g., public int MyProperty { get; set; }) over manually implemented ones.
dotnet_style_prefer_auto_properties = true
# Prefer collection initializer syntax when the collection type matches loosely.
dotnet_style_prefer_collection_initializer = when_types_loosely_match
# Prefer compound assignment (e.g., +=) over separate assignment and operation.
dotnet_style_prefer_compound_assignment = true
# Prefer conditional expressions (?:) over return statements.
dotnet_style_prefer_conditional_expression_over_return = true
# Prefer explicit cast in foreach when strongly typed.
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
# Prefer inferred member names in anonymous types.
dotnet_style_prefer_inferred_anonymous_type_member_names = true
# Prefer inferred element names in tuples.
dotnet_style_prefer_inferred_tuple_names = true
# Prefer 'is null' check over reference equality method for null check.
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
# Prefer simplified boolean expressions.
dotnet_style_prefer_simplified_boolean_expressions = true
# Prefer simplified string interpolation.
dotnet_style_prefer_simplified_interpolation = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all #Prefer removing unused parameters.

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none #Do not exclude any suppressions from being removed.

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false #Do not allow multiple blank lines.
dotnet_style_allow_statement_immediately_after_block_experimental = false #Do not allow statements immediately after a block.


#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true # Prefer 'var' everywhere.
csharp_style_var_for_built_in_types = true # Prefer 'var' for built-in types.
csharp_style_var_when_type_is_apparent = true # Prefer 'var' when the type is apparent.

# Expression-bodied members
csharp_style_expression_bodied_accessors = true # Prefer expression-bodied accessors.
csharp_style_expression_bodied_constructors = false # Do not prefer expression-bodied constructors.
csharp_style_expression_bodied_indexers = true # Prefer expression-bodied indexers.
csharp_style_expression_bodied_lambdas = true # Prefer expression-bodied lambdas.
csharp_style_expression_bodied_local_functions = false # Do not prefer expression-bodied local functions.
csharp_style_expression_bodied_methods = false # Do not prefer expression-bodied methods.
csharp_style_expression_bodied_operators = false # Do not prefer expression-bodied operators.
csharp_style_expression_bodied_properties = true # Prefer expression-bodied properties.

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true # Prefer pattern matching over 'as' with null check.
csharp_style_pattern_matching_over_is_with_cast_check = true # Prefer pattern matching over 'is' with cast check.
csharp_style_prefer_extended_property_pattern = true # Prefer extended property patterns.
csharp_style_prefer_not_pattern = true # Prefer 'not' pattern.
csharp_style_prefer_pattern_matching = true # Prefer pattern matching.
csharp_style_prefer_switch_expression = true # Prefer switch expressions.

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true # Prefer static local functions.
csharp_preferred_modifier_order = 
public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async # Preferred modifier order.
csharp_style_prefer_readonly_struct = true # Prefer readonly structs.
csharp_style_prefer_readonly_struct_member = true # Prefer readonly struct members.

# Code-block preferences
csharp_prefer_braces = true # Prefer braces.
csharp_prefer_simple_using_statement = true # Prefer simple 'using' statement.
csharp_style_namespace_declarations = file_scoped # Prefer file-scoped namespace declarations.
csharp_style_prefer_method_group_conversion = true # Prefer method group conversion.
csharp_style_prefer_primary_constructors = true # Prefer primary constructors.
csharp_style_prefer_top_level_statements = true # Prefer top-level statements.
